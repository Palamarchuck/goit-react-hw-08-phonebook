{"version":3,"file":"static/js/24.2d55de8b.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Phonebook/Contactform/Contactform.module.css?ae91","components/Phonebook/Contactform/Contactform.jsx","webpack://react-homework-template/./src/components/Phonebook/Contactlist/Contactlist.module.css?1a70","../node_modules/react-bootstrap/esm/ListGroupItem.js","../node_modules/react-bootstrap/esm/ListGroup.js","components/Phonebook/Contactlist/Contactlist.jsx","webpack://react-homework-template/./src/components/Phonebook/Filter/Filter.module.css?44e1","components/Phonebook/Filter/Filter.jsx","redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/Phonebook/Phonebook.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"contactForm\":\"Contactform_contactForm__+84NK\",\"contactLabel\":\"Contactform_contactLabel__Zg1F2\",\"contactInput\":\"Contactform_contactInput__zhg2c\",\"contactBtn\":\"Contactform_contactBtn__b8Bf+\"};","import { useState } from 'react';\nimport styles from './Contactform.module.css';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\n\n\nexport default function ContactForm({ onSubmit }) {\n       \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n   \n    const handleNameChange = e => {\n        setName(e.currentTarget.value);\n    };\n\n    const handleNumberChange = e => {\n        setNumber(e.currentTarget.value);\n    };\n\n\n    const handleSubmit = e => {\n        e.preventDefault();\n        onSubmit({ name, number });\n        setName('');\n        setNumber('');\n    };\n\n        return (\n            <Form onSubmit={handleSubmit} className={styles.contactForm}>\n                <Form.Label className={styles.contactLabel}>\n                    Name\n                    <Form.Control\n                        type=\"text\"\n                        name=\"name\"\n                        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                        required\n                        value={name}\n                        onChange={handleNameChange}\n                        className={styles.contactInput}\n                            \n                    />\n                </Form.Label>\n                <Form.Label className={styles.contactLabel}>Number\n                    <Form.Control\n                        type=\"tel\"\n                        name=\"number\"\n                        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n                        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                        required\n                        value={number}\n                        onChange={handleNumberChange}\n                        className={styles.contactInput}\n                    />\n\n                </Form.Label>\n                <Button type=\"submit\" className={styles.contactBtn}>Add contact</Button>\n\n            </Form>\n\n        )\n    \n    }\n\n","// extracted by mini-css-extract-plugin\nexport default {\"contactList\":\"Contactlist_contactList__WoPLo\",\"contactItem\":\"Contactlist_contactItem__OBc-c\",\"contactText\":\"Contactlist_contactText__ixnx-\",\"contactBtn\":\"Contactlist_contactBtn__3pi2C\"};","import classNames from 'classnames';\nimport * as React from 'react';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport { useNavItem } from '@restart/ui/NavItem';\nimport { makeEventKey } from '@restart/ui/SelectableContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroupItem = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  active,\n  disabled,\n  eventKey,\n  className,\n  variant,\n  action,\n  as,\n  ...props\n}, ref) => {\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'list-group-item');\n  const [navItemProps, meta] = useNavItem({\n    key: makeEventKey(eventKey, props.href),\n    active,\n    ...props\n  });\n  const handleClick = useEventCallback(event => {\n    if (disabled) {\n      event.preventDefault();\n      event.stopPropagation();\n      return;\n    }\n\n    navItemProps.onClick(event);\n  });\n\n  if (disabled && props.tabIndex === undefined) {\n    props.tabIndex = -1;\n    props['aria-disabled'] = true;\n  } // eslint-disable-next-line no-nested-ternary\n\n\n  const Component = as || (action ? props.href ? 'a' : 'button' : 'div');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    ...navItemProps,\n    onClick: handleClick,\n    className: classNames(className, bsPrefix, meta.isActive && 'active', disabled && 'disabled', variant && `${bsPrefix}-${variant}`, action && `${bsPrefix}-action`)\n  });\n});\nListGroupItem.displayName = 'ListGroupItem';\nexport default ListGroupItem;","import classNames from 'classnames';\nimport * as React from 'react';\nimport warning from 'warning';\nimport { useUncontrolled } from 'uncontrollable';\nimport BaseNav from '@restart/ui/Nav';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport ListGroupItem from './ListGroupItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst ListGroup = /*#__PURE__*/React.forwardRef((props, ref) => {\n  const {\n    className,\n    bsPrefix: initialBsPrefix,\n    variant,\n    horizontal,\n    numbered,\n    // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n    as = 'div',\n    ...controlledProps\n  } = useUncontrolled(props, {\n    activeKey: 'onSelect'\n  });\n  const bsPrefix = useBootstrapPrefix(initialBsPrefix, 'list-group');\n  let horizontalVariant;\n\n  if (horizontal) {\n    horizontalVariant = horizontal === true ? 'horizontal' : `horizontal-${horizontal}`;\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(!(horizontal && variant === 'flush'), '`variant=\"flush\"` and `horizontal` should not be used together.') : void 0;\n  return /*#__PURE__*/_jsx(BaseNav, {\n    ref: ref,\n    ...controlledProps,\n    as: as,\n    className: classNames(className, bsPrefix, variant && `${bsPrefix}-${variant}`, horizontalVariant && `${bsPrefix}-${horizontalVariant}`, numbered && `${bsPrefix}-numbered`)\n  });\n});\nListGroup.displayName = 'ListGroup';\nexport default Object.assign(ListGroup, {\n  Item: ListGroupItem\n});","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Contactlist.module.css';\nimport Button from 'react-bootstrap/Button';\nimport ListGroup from 'react-bootstrap/ListGroup';\n\n\n\nconst ContactList = ({ contacts, removeContact }) => (\n  <ListGroup className={styles.contactList}>\n    {contacts.map(({ name, number, id }) => (\n        <ListGroup.Item key = {id} className={styles.contactItem}>\n            <p className={styles.contactText}>\n            {name}: {number}\n            </p>\n            <Button onClick={()=>removeContact(id)} className={styles.contactBtn}>Delete</Button>\n        </ListGroup.Item>\n    ))}\n  </ListGroup>\n);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      number: PropTypes.string,\n      id: PropTypes.string,      \n    })\n    ),\n};\n\nexport default ContactList;\n\n\n","// extracted by mini-css-extract-plugin\nexport default {\"filterLabel\":\"Filter_filterLabel__z2DVo\",\"filterInput\":\"Filter_filterInput__Yno-Q\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport Form from 'react-bootstrap/Form';\n\nconst Filter = ({ value, onChange }) => (\n  <Form.Label className={styles.filterLabel}>\n    Find contacts by name\n    <Form.Control type=\"text\" name=\"filter\" value={value} onChange={onChange} className={styles.filterInput}/>\n  </Form.Label>\n);\n\nFilter.propTypes = {\n  value: PropTypes.string,\n};\n\nexport default Filter;","export const getContacts = ({contacts}) => contacts.items;\n\nexport const getFilterContacts = ({ contacts, filter }) => {\n    if (!filter) {\n        return contacts.items;\n    }\n\n    const normalizedFilter = filter.toLowerCase();\n    const result = contacts.items.filter(({ name, number }) => {\n        const normalizedName = name.toLowerCase();\n\n        return (normalizedName.includes(normalizedFilter) || number.includes(normalizedFilter))\n    });\n    return result;\n}","\nexport const getFilterContacts = ({ items, filter }) => {\n    const normalizedFilter = filter.toLowerCase();\n    const result = items.filter(({ name, number }) => {\n        const normalizedName = name.toLowerCase();\n\n        return (normalizedName.includes(normalizedFilter) || number.includes(normalizedFilter))\n    });\n    return result;\n}\nexport const getFilter = ({ filter }) => filter;\n","// import styles from '../Phonebook/phonebook.module.css'\n\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ContactForm from \"./Contactform/Contactform\";\nimport ContactList from \"./Contactlist/Contactlist\";\nimport Filter from './Filter/Filter';\n\nimport { fetchContacts, addContact, removeContact, } from 'redux/contacts/contacts-operations';\nimport { setFilter } from 'redux/filter/filter-actions';\nimport { getFilterContacts } from 'redux/contacts/contacts-selectors';\nimport { getFilter } from 'redux/filter/filter-selectors';\n\n\n\nexport default function Phonebook() {\n    const contacts = useSelector(getFilterContacts);\n    const filter = useSelector(getFilter)\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchContacts())\n    },[dispatch])\n\n    \n\n    const onAddContact = (payload) => {\n\n        dispatch(addContact(payload));\n    }\n\n    const onRemoveContact = (id) => {\n        dispatch(removeContact(id));\n    }\n\n    const onSetFilter = ({target}) => {\n        dispatch (setFilter(target.value))\n    }\n    \n        return (\n            <div>\n                <h1>Phonebook</h1>\n              \n                <ContactForm onSubmit={onAddContact}/> \n                <h2>Contacts</h2>\n                <Filter value={filter} onChange={onSetFilter} />\n                <ContactList contacts={contacts} removeContact={onRemoveContact} />\n                \n            </div>\n        )\n    \n}\n\n    // const [contacts, setContacts] = useLocalStorage('contacts', []);\n    // const [filter, setFilter] = useState('');\n    \n    // const addNewContact = ({ name, number }) => {\n    // const isContact = contacts.find(contact => contact.name === name);\n    //     if (isContact) {\n    //         alert(`${name} is already in contact`);\n    //         setContacts(contacts);\n    //     } else {\n    //         setContacts([\n    //             {\n    //                 id: nanoid(),\n    //                 name,\n    //                 number,\n    //             }, ...contacts,]) \n    //      };\n    // };\n\n    // const deleteContact = (contactId) => {\n    //     setContacts(contacts => (\n    //         contacts.filter(contact => contact.id !== contactId)\n    //     ))\n    // }; \n\n    // const changeFilter = (e) => {\n    //     setFilter(e.currentTarget.value);\n    // };\n\n    // const visibleContacts = () => {\n    //     const normalizedFilter = filter.toLowerCase();\n    //     return contacts.filter(contact =>\n    //     contact.name.toLowerCase().includes(normalizedFilter))\n    // }\n\n    // useEffect(() => {\n    //     const contacts = localStorage.getItem('contacts');\n    //     const parsedContacts = JSON.parse(contacts);\n\n    //     if (parsedContacts) {\n    //         setContacts(parsedContacts)}\n    // }, [setContacts])\n    \n    // useEffect(() => {\n    //     window.localStorage.setItem('contacts', JSON.stringify(contacts))\n    // }, [contacts])"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","Form","e","preventDefault","className","styles","type","pattern","title","required","value","onChange","currentTarget","Button","ListGroupItem","React","ref","bsPrefix","active","disabled","eventKey","variant","action","as","props","useBootstrapPrefix","useNavItem","key","makeEventKey","href","navItemProps","meta","handleClick","useEventCallback","event","stopPropagation","onClick","undefined","tabIndex","Component","_jsx","classNames","isActive","displayName","ListGroup","horizontalVariant","useUncontrolled","activeKey","initialBsPrefix","horizontal","numbered","controlledProps","BaseNav","Object","assign","Item","contacts","removeContact","map","id","getFilterContacts","filter","items","normalizedFilter","toLowerCase","includes","getFilter","Phonebook","useSelector","dispatch","useDispatch","useEffect","fetchContacts","payload","addContact","target","setFilter"],"sourceRoot":""}